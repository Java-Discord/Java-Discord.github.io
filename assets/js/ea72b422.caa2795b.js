(self.webpackChunkjava_bot_docs=self.webpackChunkjava_bot_docs||[]).push([[302],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=c(n),f=a,d=m["".concat(s,".").concat(f)]||m[f]||p[f]||o;return n?r.createElement(d,i(i({ref:t},u),{},{components:n})):r.createElement(d,i({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9637:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},metadata:function(){return s},toc:function(){return c},default:function(){return p}});var r=n(2122),a=n(9756),o=(n(7294),n(3905)),i=["components"],l={id:"q22",title:"Week 22"},s={unversionedId:"qotw/weeks/q22",id:"qotw/weeks/q22",isDocsHomePage:!1,title:"Week 22",description:"28.03.2021 - 04.04.2021",source:"@site/docs/qotw/weeks/q22.md",sourceDirName:"qotw/weeks",slug:"/qotw/weeks/q22",permalink:"/qotw/weeks/q22",version:"current",frontMatter:{id:"q22",title:"Week 22"},sidebar:"weeks",previous:{title:"Week 21",permalink:"/qotw/weeks/q21"},next:{title:"Week 23",permalink:"/qotw/weeks/q23"}},c=[],u={toc:c};function p(e){var t=e.components,l=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h4",{id:"28032021---04042021"},"28.03.2021 - 04.04.2021"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"image",src:n(2731).Z})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Submission by dan1st#7327"))),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.oracle.com/javase/specs/jls/se15/html/jls-10.html"},"Arrays are a language feature that allows to store multiple elements of the same type (any type is allowed) in memory. Arrays have a fixed length."),"\n",(0,o.kt)("a",{parentName:"p",href:"https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collection.html"},(0,o.kt)("inlineCode",{parentName:"a"},"Collection"))," is an general purpose interface for data structures. It is part of the standard library and not part of the language itself. It is also not possible to just create a collection but only to create instances of concrete implementations of ",(0,o.kt)("inlineCode",{parentName:"p"},"Collection"),"."),(0,o.kt)("p",null,"An example of a Collection is ArrayList. ArrayList is a concrete List (special form of s collection) that uses arrays internally. ArrayList starts with no elements (by default) and allows to add elements at any point (the internal array id recreared when needed). While there is only a single array implementation, there a many different Collections for different purposes. Most of them have a variable length, some have a fixed/maximum length."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Submission by Spider EveryOS#8098"))),(0,o.kt)("p",null,"An array is a fixed-length data type which allows you to hold many objects.\nA collection is a class that can be either fixed-length or variable-length. It also holds objects, but does so in a different way depending on the type of collection. For example, maps have both an index key and a value.\nThe syntactic method of accessing the two is different. Arrays can be indexed with the ",(0,o.kt)("inlineCode",{parentName:"p"},"[i]")," syntax, while Collections are often indexed with getters, setters, and other auxiliary methods."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Submission by Andrew.#3939"))),(0,o.kt)("p",null,"Arrays are a fixed-size, contiguous block of memory that is allocated for storing primitives or objects, whereas the Java Collections Framework is a layer of abstraction that provides programmers with a set of pre-implemented data structures, some of which use arrays as their internal data storage medium. Arrays have a special bracket-syntax for accessing and setting the value of variables at specific points in the array, using integer indexes starting from zero and going to the size of the array - 1, whereas collections offer methods for data access instead. Generally, collections use more memory, but offer more functionality than arrays for the average developer."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Submission by Dioxin#9863"))),(0,o.kt)("p",null,"Arrays are low-level data structures, while collections are high-level data structures."),(0,o.kt)("p",null,"Although both are objects in Java, collections provide a more functional interface: you can ",(0,o.kt)("inlineCode",{parentName:"p"},"sort"),", you can ",(0,o.kt)("inlineCode",{parentName:"p"},"clear()"),", and you can query active elements using ",(0,o.kt)("inlineCode",{parentName:"p"},"size()")," (which differs from array's ",(0,o.kt)("inlineCode",{parentName:"p"},"length"),", which queries the fixed-size of the array)."),(0,o.kt)("p",null,"Some of the functions that make collections more functional than arrays are ",(0,o.kt)("inlineCode",{parentName:"p"},"add"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"remove"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"contains"),"."))}p.isMDXComponent=!0},2731:function(e,t,n){"use strict";t.Z=n.p+"assets/images/QOTW22-156bc56c1b7a3c145239e13aa158cef9.png"}}]);
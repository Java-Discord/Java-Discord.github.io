(self.webpackChunkjava_bot_docs=self.webpackChunkjava_bot_docs||[]).push([[128],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return l},kt:function(){return d}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),f=u(r),d=o,m=f["".concat(s,".").concat(d)]||f[d]||p[d]||a;return r?n.createElement(m,c(c({ref:t},l),{},{components:r})):n.createElement(m,c({ref:t},l))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=f;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var u=2;u<a;u++)c[u]=r[u];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},6664:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return i},metadata:function(){return s},toc:function(){return u},default:function(){return p}});var n=r(2122),o=r(9756),a=(r(7294),r(3905)),c=["components"],i={id:"q38",title:"Week 38"},s={unversionedId:"qotw/weeks/q38",id:"qotw/weeks/q38",isDocsHomePage:!1,title:"Week 38",description:"25.07.2021 - 01.08.2021",source:"@site/docs/qotw/weeks/q38.md",sourceDirName:"qotw/weeks",slug:"/qotw/weeks/q38",permalink:"/qotw/weeks/q38",version:"current",frontMatter:{id:"q38",title:"Week 38"},sidebar:"tutorialSidebar",previous:{title:"Week 37",permalink:"/qotw/weeks/q37"},next:{title:"Week 39",permalink:"/qotw/weeks/q39"}},u=[],l={toc:u};function p(e){var t=e.components,i=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,n.Z)({},l,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h4",{id:"25072021---01082021"},"25.07.2021 - 01.08.2021"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"image",src:r(6187).Z})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Submission by Neo#1844"))),(0,a.kt)("p",null,"Code coverage is the measurement of how much of the code have been covered by tests"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Submission by  dan1st#7327"))),(0,a.kt)("p",null,"Ideally, unit tests should execute and test every single part of the codebase. In practice, some of code is not tested/covered by unit tests. A populat metric for the test suite is code coverage. Code coverage simply is the percentage of code that is covered (executed) by (unit) tests. The ideal case would be a code coverage of 100% (every line of code executed)."),(0,a.kt)("p",null,"However, code coverage is not an ideal measurement. It justs states the relative amount of (production) code executed by the tests but this may be different than the actually tested code as the tests may execute code that is not subject of the tests. Aside from this, different projects may have different requirements for testing and e.g. 90% code coverage in one project may not be comparable with e.g. 80% code coverage in another project."))}p.isMDXComponent=!0},6187:function(e,t,r){"use strict";t.Z=r.p+"assets/images/QOTW38-2bde8a26489a7eb646f8f6d120fa28fe.png"}}]);
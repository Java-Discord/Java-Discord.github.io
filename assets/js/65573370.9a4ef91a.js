(self.webpackChunkjava_bot_docs=self.webpackChunkjava_bot_docs||[]).push([[237],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=c(n),d=r,k=m["".concat(l,".").concat(d)]||m[d]||p[d]||o;return n?a.createElement(k,s(s({ref:t},u),{},{components:n})):a.createElement(k,s({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5715:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},metadata:function(){return l},toc:function(){return c},default:function(){return p}});var a=n(2122),r=n(9756),o=(n(7294),n(3905)),s=["components"],i={id:"q47",title:"Week 47"},l={unversionedId:"qotw/weeks/q47",id:"qotw/weeks/q47",isDocsHomePage:!1,title:"Week 47",description:"10.09.2021 - 24.10.2021",source:"@site/docs/qotw/weeks/q47.md",sourceDirName:"qotw/weeks",slug:"/qotw/weeks/q47",permalink:"/qotw/weeks/q47",version:"current",frontMatter:{id:"q47",title:"Week 47"},sidebar:"weeks",previous:{title:"Week 46",permalink:"/qotw/weeks/q46"},next:{title:"Week 48",permalink:"/qotw/weeks/q48"}},c=[],u={toc:c};function p(e){var t=e.components,i=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,a.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h4",{id:"10092021---24102021"},"10.09.2021 - 24.10.2021"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"image",src:n(9068).Z})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Submission by dan1st#7327"))),(0,o.kt)("p",null,"Switch Expressions were introduced in Java 14 and are an improvement for switch-case statements that all assign something to the same value.\nInstead of:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'String someVariable;\nswitch(something){\n    case 0:\n        someVariable="zero"\n        break;\n    case 1:\n        someVariable="one"\n        break;\n    default:\n        someVariable=String.valueOf(someVariable);\n}\n')),(0,o.kt)("p",null,"It is possible to write:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'String someVariable=switch(something){\n    case 0->"zero";\n    case 1->"one";\n    default->String.valueOf(something);\n}\n')),(0,o.kt)("p",null,"It also works if branches contain multiple statements using the ",(0,o.kt)("inlineCode",{parentName:"p"},"yield")," keyword:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'String someVariable=switch(something){\n    case 0->"zero";\n    case 1->"one";\n    default:{\n       System.out.println("other);\n       yield String.valueOf(something);\n}\n')),(0,o.kt)("p",null,"This syntax allows to write shorter code that is less error-prone as ",(0,o.kt)("inlineCode",{parentName:"p"},"break")," statements are not required.\nSwitch expressions can be used everywhere where other expressions can be used (variable assignments, method calls, ",(0,o.kt)("inlineCode",{parentName:"p"},"return")," calls, etc.)."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Submission by sahilasopa#2787"))),(0,o.kt)("p",null,"Its A Shorter Version And It Contains ",(0,o.kt)("inlineCode",{parentName:"p"},"->")," and not ",(0,o.kt)("inlineCode",{parentName:"p"},":")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Submission by ouch#7430"))),(0,o.kt)("p",null,"Enchanced switch case is a compressed version of switch case that doesnt need the break keywords and makes things very easy"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Submission by TheAwesomeGuy47#8156"))),(0,o.kt)("p",null,"You do not have to use\n",(0,o.kt)("inlineCode",{parentName:"p"},"break;"),"\nin an enhanced switch statement."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Submission by Jadefalke#3799"))),(0,o.kt)("p",null,"Before enhanced switch statements you had to write lots of code for a simple switch. You had to break each statement and it wasn't feeling very java like. They looked like this."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"switch (value) {\n    case someValue:\n        someAction();\n        break;\n\n    case anotherValue:\n    case someOtherValue:\n        someOtherAction();\n        somethingElseToo();\n        break;\n\n    default:\n        somethingCompletelyElse();\n}\n")),(0,o.kt)("p",null,"Since Java 14 you can use enhanced switch statements which look the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"switch (value) {\n    case someValue -> someAction();\n\n    case someOtherValue, anotherValue -> {\n        someOtherAction();\n        somethingElseToo();\n    }\n    \n    default -> somethingCompletelyElse();\n}\n")),(0,o.kt)("p",null,"This is much cleaner and is way easier to read and write."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Submission by Maeve#6666"))),(0,o.kt)("p",null,"The switch statement has been a part of Java since the beginning. There are some limitations and inconveniences to it tho, one can only have one value per case and fall-through."),(0,o.kt)("p",null,"Java 12 brought some improvements to it: switch expressions and the possibility to have multiple values per case. To use a switch statement as an expression, the ",(0,o.kt)("inlineCode",{parentName:"p"},"yield")," keyword was added (Originally, it was ",(0,o.kt)("inlineCode",{parentName:"p"},"break")," followed by a value, but in Java 13 it was replaced with ",(0,o.kt)("inlineCode",{parentName:"p"},"yield"),"). It is acts similarly to the ",(0,o.kt)("inlineCode",{parentName:"p"},"return")," keyword but for switch statements. There is no need for a ",(0,o.kt)("inlineCode",{parentName:"p"},"break;")," after using ",(0,o.kt)("inlineCode",{parentName:"p"},"yield"),".\nTo avoid fall-through, ",(0,o.kt)("inlineCode",{parentName:"p"},"case ->")," can be used instead of ",(0,o.kt)("inlineCode",{parentName:"p"},"case:"),". There is no need for ",(0,o.kt)("inlineCode",{parentName:"p"},"break"),"using this syntax. However, it isn't possible to use both syntaxes in the same switch statement/expression."))}p.isMDXComponent=!0},9068:function(e,t,n){"use strict";t.Z=n.p+"assets/images/QOTW47-59718a73529806ca5b68f6fcfacf0ce4.png"}}]);
(self.webpackChunkjava_bot_docs=self.webpackChunkjava_bot_docs||[]).push([[253],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(n),f=a,d=m["".concat(s,".").concat(f)]||m[f]||p[f]||i;return n?r.createElement(d,o(o({ref:t},c),{},{components:n})):r.createElement(d,o({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8198:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},metadata:function(){return s},toc:function(){return u},default:function(){return p}});var r=n(2122),a=n(9756),i=(n(7294),n(3905)),o=["components"],l={id:"q25",title:"Week 25"},s={unversionedId:"qotw/weeks/q25",id:"qotw/weeks/q25",isDocsHomePage:!1,title:"Week 25",description:"18.04.2021 - 25.04.2021",source:"@site/docs/qotw/weeks/q25.md",sourceDirName:"qotw/weeks",slug:"/qotw/weeks/q25",permalink:"/qotw/weeks/q25",version:"current",frontMatter:{id:"q25",title:"Week 25"},sidebar:"tutorialSidebar",previous:{title:"Week 24",permalink:"/qotw/weeks/q24"},next:{title:"Week 26",permalink:"/qotw/weeks/q26"}},u=[],c={toc:u};function p(e){var t=e.components,l=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},c,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h4",{id:"18042021---25042021"},"18.04.2021 - 25.04.2021"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"image",src:n(8853).Z})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Submission by dan1st#7327"))),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"String")," is an immutable class whose objects hold texts.\nInstead of allowing modification, ",(0,i.kt)("inlineCode",{parentName:"p"},"Strings")," have various methods for creating another, different ",(0,i.kt)("inlineCode",{parentName:"p"},"String"),"."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"StringBuilder")," is a class that represents mutable ",(0,i.kt)("inlineCode",{parentName:"p"},"Strings"),". It allows to e.g. append data or remove characters. It is not thread safe."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"StringBuffer")," is a thread-safe variant of ",(0,i.kt)("inlineCode",{parentName:"p"},"StringBuilder"),"."),(0,i.kt)("p",null,"All of those classes implement ",(0,i.kt)("inlineCode",{parentName:"p"},"CharSequence"),". ",(0,i.kt)("inlineCode",{parentName:"p"},"CharSequence")," is an interface for objects representing a sequence of characters like the name suggests. CharSequence provides primitive methods for working with sequences of characters while the concrete classes allow for much more."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Submission by Spider EveryOS#8098"))),(0,i.kt)("p",null,'A String is an immutable data type representing an immutable array of characters (in other words, "text"). It is similar to the ',(0,i.kt)("inlineCode",{parentName:"p"},"char*")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"char[]")," constructs found in other languages, except that it is ",(0,i.kt)("em",{parentName:"p"},"immutable")," (and cannot be changed)."),(0,i.kt)("p",null,"A StringBuffer is a lot like the StringBuilder class, which I'm sure a lot of us have used. One big difference between the two, however, is that StringBuffer is thread-safe, and also much slower. A StringBuffer is a ",(0,i.kt)("em",{parentName:"p"},"mutable")," dataclass that allows for creating a string by invoking a series of ",(0,i.kt)("inlineCode",{parentName:"p"},".append(*)")," calls, and then invoking ",(0,i.kt)("inlineCode",{parentName:"p"},".toString()"),". The initial capacity of a StringBuffer is set via the constructor."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Submission by daysling#6969"))),(0,i.kt)("p",null,"Strings are immutable but StringBuffer are mutable.. Strings takes more memory, extends Object classes equals() where StringBuffer are fast and doesn't extend Object classes equals()."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Submission by Loading BG#7962"))),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"String")," is immutable - once set cannot be changed\n",(0,i.kt)("inlineCode",{parentName:"p"},"StringBuffer")," is mutable - you can append and delete characters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Submission by Dioxin#9863"))),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"String")," is an immutable collection of letters."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"StringBuffer")," is a mutable synchronized collection of letters"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"StringBuilder")," is a mutable non-synchronized collection of letters, which is preferred over ",(0,i.kt)("inlineCode",{parentName:"p"},"StringBuffer")," to improve performance when not accessed by multiple threads"))}p.isMDXComponent=!0},8853:function(e,t,n){"use strict";t.Z=n.p+"assets/images/QOTW25-b214febee9847296e4dae4b12c97d002.png"}}]);
(self.webpackChunkjava_bot_docs=self.webpackChunkjava_bot_docs||[]).push([[359],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return h}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(n),h=r,m=d["".concat(l,".").concat(h)]||d[h]||p[h]||i;return n?a.createElement(m,o(o({ref:t},u),{},{components:n})):a.createElement(m,o({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},837:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},metadata:function(){return l},toc:function(){return c},default:function(){return p}});var a=n(2122),r=n(9756),i=(n(7294),n(3905)),o=["components"],s={id:"q24",title:"Week 24"},l={unversionedId:"qotw/weeks/q24",id:"qotw/weeks/q24",isDocsHomePage:!1,title:"Week 24",description:"11.04.2021 - 18.04.2021",source:"@site/docs/qotw/weeks/q24.md",sourceDirName:"qotw/weeks",slug:"/qotw/weeks/q24",permalink:"/qotw/weeks/q24",version:"current",frontMatter:{id:"q24",title:"Week 24"},sidebar:"tutorialSidebar",previous:{title:"Week 23",permalink:"/qotw/weeks/q23"},next:{title:"Week 25",permalink:"/qotw/weeks/q25"}},c=[],u={toc:c};function p(e){var t=e.components,s=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},u,s,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h4",{id:"11042021---18042021"},"11.04.2021 - 18.04.2021"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"image",src:n(3859).Z})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Submission by AL#3358"))),(0,i.kt)("p",null,"In programming, data encapsulation refers to access to hidden data or information from outside. Prevent direct access to internal data structures, but via defined interfaces"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Submission by Spider EveryOS#8098"))),(0,i.kt)("p",null,"Encapsulation is how all fields should be marked as private because other classes should not be able to access or tamper with a class's internals. Instead, getters and setters should be used to query or change the state of an object."),(0,i.kt)("p",null,"More specifically:\nOther classes should not know how a class operates, only that it does. The data is part of the object (not a global variable or something) so it stays in the object. This helps make management of software easily, as you don't have, say, the Keyboard class changing a float representing a tax rate. Class' data are their own to know, and they can define how their data is managed as they like."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Submission by dan1st#7327"))),(0,i.kt)("p",null,"Encapsulation is the process of hiding implementation details. While a class needs to know its implementation details, they should not be exposed to other classes. This gives the programmer the flexibility to easily change the implementation details without changing other classes. For example, vectors could be represented like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"@Immutable\npublic class SimpleVector{\n  private final int x;\n  private final int y;\n  public int getX(){\n    return x;\n  }\n  public int getY(){\n    return y;\n  }\n//other stuff\n}\n")),(0,i.kt)("p",null,"This vector can simply be changed to use polarized form if the developer i.e. thinks the class is more efficient for some operations:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"@Immutable\npublic class SimpleVector{\n  private final int alpha;\n  private final int len;\n  public int getX(){\n    return len*Math.cos(alpha);\n  }\n  public int getY(){\n    returnlen*Math.sin(alpha);\n  }\n//other stuff\n}\n")),(0,i.kt)("p",null,"This would not be possible if the ",(0,i.kt)("inlineCode",{parentName:"p"},"x")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"y")," values of the class were ",(0,i.kt)("inlineCode",{parentName:"p"},"public"),". In that case, the variables ",(0,i.kt)("inlineCode",{parentName:"p"},"x")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"y")," could not change without changing other classes that uses them.\nEncapsulation is especially important when writing libraries and classes that should be used often as incompatibilities would be way worse in that case."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Submission by Future_vive#2953"))),(0,i.kt)("p",null,"Encapsulation is one the four OOP princeples. it refers to data binding i.e, accessing data through methods - like encapsulating data into methods."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Submission by AttilaTheHun#9489"))),(0,i.kt)("p",null,"Encapsulation is a core OOP thingy. It is the data hiding when you don't want others to manipulate your variables directly, but only via designated methods, such as getters and setters."),(0,i.kt)("p",null,"The purpose is that it looks good you don't need to care about the class in other places than in the class itself, you can always work with the designated methods."))}p.isMDXComponent=!0},3859:function(e,t,n){"use strict";t.Z=n.p+"assets/images/QOTW24-44c5ae3094119ce9728a88b7a286842c.png"}}]);
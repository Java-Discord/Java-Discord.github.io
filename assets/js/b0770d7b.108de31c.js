(self.webpackChunkjava_bot_docs=self.webpackChunkjava_bot_docs||[]).push([[493],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),b=c(n),m=o,f=b["".concat(s,".").concat(m)]||b[m]||p[m]||i;return n?r.createElement(f,a(a({ref:t},u),{},{components:n})):r.createElement(f,a({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=b;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}b.displayName="MDXCreateElement"},9454:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},metadata:function(){return s},toc:function(){return c},default:function(){return p}});var r=n(2122),o=n(9756),i=(n(7294),n(3905)),a=["components"],l={id:"q35",title:"Week 35"},s={unversionedId:"qotw/weeks/q35",id:"qotw/weeks/q35",isDocsHomePage:!1,title:"Week 35",description:"04.07.2021 - 11.07.2021",source:"@site/docs/qotw/weeks/q35.md",sourceDirName:"qotw/weeks",slug:"/qotw/weeks/q35",permalink:"/qotw/weeks/q35",version:"current",frontMatter:{id:"q35",title:"Week 35"},sidebar:"tutorialSidebar",previous:{title:"Week 34",permalink:"/qotw/weeks/q34"},next:{title:"Week 36",permalink:"/qotw/weeks/q36"}},c=[],u={toc:c};function p(e){var t=e.components,l=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h4",{id:"04072021---11072021"},"04.07.2021 - 11.07.2021"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"image",src:n(5917).Z})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Submission by dan1st#7327"))),(0,i.kt)("p",null,"A BubbleSort using integers could be performed like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public static void bubbleSort(int[] toSort){\n    boolean sorted=false;\n    for(int endIndex=toSort.length;!sorted&&endIndex>0;endIndex--){\n                                        sorted=true;\n        for(int j=0;j<endIndex-1;j++){\n            if(toSort[j]>toSort[j+1]){\n                int tmp=toSort[j];\n                toSort[j]=toSort[j+1];\n                toSort[j+1]=tmp;\n                sorted=false;\n            }\n        }\n    }\n")),(0,i.kt)("p",null,"The outer loop iterates until the array is sorted. The inner loop checks for all all elements (except the last one) if they are bigger than the next element. If this is the case, the elements are swapped. As the highest element moves to the last index, the inner loop doesn't need to check that element in the next iteration."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Submission by Tahomuk#0128"))),(0,i.kt)("p",null,"A bubble sort consists of five elements:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"List to sort"),(0,i.kt)("li",{parentName:"ol"},"One loop with an indicator if bubbleing again is necessary"),(0,i.kt)("li",{parentName:"ol"},"Decision if bubbleing upwards or downwards"),(0,i.kt)("li",{parentName:"ol"},"Decision if sorting ascending or descending"),(0,i.kt)("li",{parentName:"ol"},"A variable swap mechanism (e.g. temporary variable)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"int[] collection = new int[] {6,7,2,11,2,1}; // 1. list to sort\n\nboolean bubble;\n\ndo {\n    \n    bubble = false;\n    \n    for (int i = collection.length - 1; i >= 1; i--) { // 3. bubbleing upwards\n        \n        if (collection[i] < collection[i - 1]) { // 4. ascending sort\n            bubble = true;\n            int temp = collection[i];           //\n            collection[i] = collection[i - 1];  // 5. triangle swap mechanism\n            collection[i - 1] = temp;           //\n        }\n        \n    }\n    \n} while (bubble); // 2. bubble necessary?\n\nSystem.out.println(Arrays.toString(collection));\n")))}p.isMDXComponent=!0},5917:function(e,t,n){"use strict";t.Z=n.p+"assets/images/QOTW35-da49a12d9b16601b16876cc94221cbe9.png"}}]);
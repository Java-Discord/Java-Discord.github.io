(self.webpackChunkjava_bot_docs=self.webpackChunkjava_bot_docs||[]).push([[682],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),c=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,f=d["".concat(o,".").concat(m)]||d[m]||p[m]||l;return n?a.createElement(f,s(s({ref:t},u),{},{components:n})):a.createElement(f,s({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,s=new Array(l);s[0]=d;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var c=2;c<l;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4033:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},metadata:function(){return o},toc:function(){return c},default:function(){return p}});var a=n(2122),r=n(9756),l=(n(7294),n(3905)),s=["components"],i={id:"q44",title:"Week 44"},o={unversionedId:"qotw/weeks/q44",id:"qotw/weeks/q44",isDocsHomePage:!1,title:"Week 44",description:"19.09.2021 - 26.09.2021",source:"@site/docs/qotw/weeks/q44.md",sourceDirName:"qotw/weeks",slug:"/qotw/weeks/q44",permalink:"/qotw/weeks/q44",version:"current",frontMatter:{id:"q44",title:"Week 44"},sidebar:"weeks",previous:{title:"Week 43",permalink:"/qotw/weeks/q43"},next:{title:"Week 45",permalink:"/qotw/weeks/q45"}},c=[],u={toc:c};function p(e){var t=e.components,i=(0,r.Z)(e,s);return(0,l.kt)("wrapper",(0,a.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h4",{id:"19092021---26092021"},"19.09.2021 - 26.09.2021"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"image",src:n(5003).Z})),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Submission by dan1st#7327"))),(0,l.kt)("p",null,"Sealed classes are a feature of Java 17. Marking a class (or an interface) with the keyword ",(0,l.kt)("inlineCode",{parentName:"p"},"sealed")," only allows specific subclasses (or implementing classes) to exist. The classes allowed to extend the sealed class are specified after the ",(0,l.kt)("inlineCode",{parentName:"p"},"permits")," keyword:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"public sealed class SealedClass permits LegalClass{\n\n}\n\npublic final class LegalClass extends SealedClass{\n    //Allowed\n}\npublic final class IllegalClass extends SealedClass{\n    //Not allowed as SealedClass does not permit IllegalClass to extend SealedClass\n}\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Submission by gelbelachente#8017"))),(0,l.kt)("p",null,"A Modifier of a class which permits only certain classes to inherit from them."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Submission by TheAwesomeGuy47#8156"))),(0,l.kt)("p",null,"Classes that cannot be accessed by something outside of the class."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Submission by StormGaming#3031"))),(0,l.kt)("p",null,"A sealed class, in C#, is a class that cannot be inherited by any class but can be instantiated. The design intent of a sealed class is to indicate that the class is specialized and there is no need to extend it to provide any additional functionality through inheritance to override its behavior."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Submission by bucket#8911"))),(0,l.kt)("p",null,"They're basically just classes that can only be extended by other class that the ",(0,l.kt)("inlineCode",{parentName:"p"},"sealed")," class permits. For example: class A with the definition of:"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"public sealed class A permits B")),(0,l.kt)("p",null,"can only be extended by class ",(0,l.kt)("inlineCode",{parentName:"p"},"B"),"."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Submission by REMCodes#1947"))),(0,l.kt)("p",null,"Sealed classes are for disabling inheritance, or limiting what other classes can inherit."))}p.isMDXComponent=!0},5003:function(e,t,n){"use strict";t.Z=n.p+"assets/images/QOTW44-e888658ec5d836d2ad0115226e99e5da.png"}}]);
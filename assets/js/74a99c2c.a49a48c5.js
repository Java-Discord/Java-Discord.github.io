(self.webpackChunkjava_bot_docs=self.webpackChunkjava_bot_docs||[]).push([[449],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),f=c(r),m=a,d=f["".concat(s,".").concat(m)]||f[m]||p[m]||o;return r?n.createElement(d,i(i({ref:t},u),{},{components:r})):n.createElement(d,i({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},1951:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return l},metadata:function(){return s},toc:function(){return c},default:function(){return p}});var n=r(2122),a=r(9756),o=(r(7294),r(3905)),i=["components"],l={id:"q43",title:"Week 43"},s={unversionedId:"qotw/weeks/q43",id:"qotw/weeks/q43",isDocsHomePage:!1,title:"Week 43",description:"12.09.2021 - 19.09.2021",source:"@site/docs/qotw/weeks/q43.md",sourceDirName:"qotw/weeks",slug:"/qotw/weeks/q43",permalink:"/qotw/weeks/q43",version:"current",frontMatter:{id:"q43",title:"Week 43"},sidebar:"weeks",previous:{title:"Week 42",permalink:"/qotw/weeks/q42"},next:{title:"Week 44",permalink:"/qotw/weeks/q44"}},c=[],u={toc:c};function p(e){var t=e.components,l=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h4",{id:"12092021---19092021"},"12.09.2021 - 19.09.2021"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"image",src:r(2615).Z})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Submission by gelbelachente#8017"))),(0,o.kt)("p",null,"Basically just a special class to free the developers from the ugly getter-setter functions creating. ITS used to store date and gives evevry variable an automatic getter-setter."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Submission by Jadefalke#3799"))),(0,o.kt)("p",null,'A record is a simple dataclass "preset" that allows you to create simple dataclasses with getters for one or more attributes without having to write the usualy boilerplate code.\nThey are an easy way to keep track of a few datapoints without having to write much code at all.'),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Submission by dan1st#7327"))),(0,o.kt)("p",null,"Records are a feature of Java 16. Records allow to create simple data classes without the typical overhead.\nThe syntax looks like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"public record RecordName (Type variableName, OtherType otherVariableName) {}\n")),(0,o.kt)("p",null,"This automatically creates a claas with the said variables (although those are final), getters (the name of each getter is the same as the variable name), an all-args-constructor and equals/hashCode/toString methods using all variables in the brackets."))}p.isMDXComponent=!0},2615:function(e,t,r){"use strict";t.Z=r.p+"assets/images/QOTW43-a3869c93119336c0a8f5a239e2d03985.png"}}]);